Challenge 2.1
-----------
The number 6 is a truly great number. Given two int values, a and b, return true if either one is 6. Or if their sum or difference is 6. 
Note: the function Math.abs(num) computes the absolute value of a number.

love6(6, 4) → true
love6(4, 5) → false
love6(1, 5) → true

prototype 	: 	love6(int a, int b)
return type :	??


Challenge 2.2
-----------
Given a number n, return true if n is in the range 1..10, inclusive. Unless "outsideMode" is true, 
in which case return true if the number is less or equal to 1, or greater or equal to 10.

in1To10(5, false) → true
in1To10(11, false) → false
in1To10(11, true) → true

prototype 	: 	in1To10(int n, boolean outsideMode)
return type :	??

Challenge 2.3
-----------

We'll say a number is special if it is a multiple of 11 or if it is one more than a multiple of 11. 
Return true if the given non-negative number is special. Use the % "mod" operator 

specialEleven(22) → true
specialEleven(23) → true
specialEleven(24) → false

prototype 	: 	specialEleven(int n)
return type :	??


Challenge 2.4
-----------
Given three ints, a b c, return true if two or more of them have the same rightmost digit. The ints are non-negative.
Note: the % "mod" operator computes the remainder, e.g. 17 % 10 is 7.

lastDigit(23, 19, 13) → true
lastDigit(23, 19, 12) → false
lastDigit(23, 19, 3) → true


prototype 	: 	lastDigit(?? a, ?? b, ?? c)
return type :	??


Challenge 2.5
-----------
Your cell phone rings. Return true if you should answer it. Normally you answer, except in the morning you only answer if it is your mom calling. In all cases, if you are asleep, you do not answer.

answerCell(false, false, false) → true
answerCell(false, false, true) → false
answerCell(true, false, false) → false

prototype 	: 	answerCell(boolean isMorning, boolean isMom, boolean isAsleep)
return type :	??



Challenge 2.6
-----------
Given a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a boolean indicating if we are on vacation, return a string of the form "7:00" indicating when the alarm clock should ring. Weekdays, the alarm should be "7:00" and on the weekend it should be "10:00". Unless we are on vacation -- then on weekdays it should be "10:00" and weekends it should be "off".

alarmClock(1, false) → "7:00"
alarmClock(5, false) → "7:00"
alarmClock(0, false) → "10:00"

prototype 	: 	alarmClock(int day, boolean vacation)
return type :	??


